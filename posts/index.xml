<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title> YONEHUB | クラウドエンジニアの雑記 </title>
        <link> https://yonehub.y10e.com/</link>
        <description>Recent content in Posts  on YONEHUB</description>
        <generator>Hugo -- gohugo.io</generator>
        
            <language>ja</language>
        
        
        
            <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
        
        
            <lastBuildDate>Tue, 17 Dec 2019 12:47:23 +0900</lastBuildDate>
        
        <atom:link href="https://yonehub.y10e.com/posts/" rel="self" type="application/rss+xml" />
        
            <item>
                <title>Azure の自動スケール操作を webhook で Microsoft Teams / Slack に通知する</title>
                <link>https://yonehub.y10e.com/2019/12/17/20191217_azure_webhook/</link>
                <pubDate>Tue, 17 Dec 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/12/17/20191217_azure_webhook/</guid>
                <description>はじめに Azure では、 Cloud Service や Webapp、VM Scaleset などの各種リソースであ事前に設定した条件に応じて自動でインスタンス数を増減させる自動スケールの機能が用意されています。 システムの CPU 負荷などに応じて自動でリソース体制をアジャストできるためとてもクラウドらしい機能かと思いますが、運用を考えると、自動スケールが動作した際に e-mail や Slack、Microsoft Teams などに自動通知したいなどの要望も自然と出てきます。 e-mail は</description>
            </item>
        
            <item>
                <title>Azure Container Instances の起動・停止・再起動 by Azure Powershell</title>
                <link>https://yonehub.y10e.com/2019/12/14/20191214_azure_aci_cmd/</link>
                <pubDate>Sat, 14 Dec 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/12/14/20191214_azure_aci_cmd/</guid>
                <description>はじめに Azure Container Instances を Azure Powershell で操作しようとコマンド一覧を確認していたが、次の通り Get（参照）, New（作成）, Remove（削除）などしか用意されていない。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 PS Azure:\&amp;gt; gcm *Az*ContainerGroup* CommandType Name Version Source ----------- ---- ------- ------ Alias Get-AzureRmContainerGroup Alias New-AzureRmContainerGroup Alias Remove-AzureRmContainerGroup Cmdlet Get-AzContainerGroup 1.0.1 Az.ContainerInstance Cmdlet New-AzContainerGroup 1.0.1 Az.ContainerInstance Cmdlet Remove-AzContainerGroup 1.0.1 Az.ContainerInstance Azure:/ PS Azure:\&amp;gt; gcm *Az*ContainerInstance* CommandType Name Version Source ----------- ---- ------- ------ Alias Get-AzureRmContainerInstanceLog Cmdlet Get-AzContainerInstanceLog 1.0.1 Az.ContainerInstance REST API では、start、stop、restart も用意されているけど、Azure Powershell のコマンドとしては提供されていないみ</description>
            </item>
        
            <item>
                <title>Git での Tag 管理</title>
                <link>https://yonehub.y10e.com/2019/12/12/20191207_github_release/</link>
                <pubDate>Thu, 12 Dec 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/12/12/20191207_github_release/</guid>
                <description>はじめに git における tag はコミットの別名（alias）である。なので、tag はコミット単位で設定される。 tag はコミットに対してわかりやすいように、例えば version などの意味を持った値が設定される。(v0.1, v0.2など) よくある操作を次にまとめる。 作成（CREATE） コメントなしでシンプルな tag を作成する場合は次の通りになる。 1 git tag &amp;lt;tag&amp;gt; コメント付きで tag を作成する場合は以下となる。 1 git tag -a &amp;lt;tag&amp;gt; -m &amp;#39;&amp;lt;Comment&amp;gt;&amp;#39; この時、コミットを指</description>
            </item>
        
            <item>
                <title>ターミナルから Visual Studio Code を呼び出す方法</title>
                <link>https://yonehub.y10e.com/2019/12/05/20191205_vscode_terminal/</link>
                <pubDate>Thu, 05 Dec 2019 22:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/12/05/20191205_vscode_terminal/</guid>
                <description>Mac や SSH で接続した Linux サーバ上でターミナルから操作している時に、既存ファイルをエディタで編集したり、ファイル名を指定して新規にファイルを作成、内容の編集をしたいみたいなことは日常的にあると思います。 そんな時、今までは vi や emacs を使いがちだったのですが、Visual Studio Code で開いて編集する方法をメモしておきます。 もちろん Visual Studio Code のワークスペースにフォルダ追加していけば同じことはできますが、ワークスペースがごちゃご</description>
            </item>
        
            <item>
                <title>Azure Kubernetes Service(AKS) で Dapr を動かす(HelloWord編)</title>
                <link>https://yonehub.y10e.com/2019/11/29/20191130_dapr_aks_helloworld/</link>
                <pubDate>Fri, 29 Nov 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/29/20191130_dapr_aks_helloworld/</guid>
                <description>前回は、AKS 上で Dapr をセットアップしました。 次は、Azure Kubernetes Service(AKS) 上で dapr のサンプルアプリケーションを動作させてみます。（前回と同様、動作検証時の dapr は v0.2 になります。） 最終的なアーキテクチャは次の通りです。 dapr がインストールされた環境で、python と node.js の POD が動作します。python と node.js の POD は、それぞれの POD 内でサイドカーとして動作する dapr API を経由して、state 情報の更新と取得が行われます。 0. ドキュメント Hello</description>
            </item>
        
            <item>
                <title>Azure Kubernetes Service(AKS)で Dapr を動かす（Setup編）</title>
                <link>https://yonehub.y10e.com/2019/11/27/20191127_dapr_aks_setup/</link>
                <pubDate>Wed, 27 Nov 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/27/20191127_dapr_aks_setup/</guid>
                <description>先日、stand-alone な環境で dapr の動作を検証しました。 次は、Kubernetes cluster 上で dapr の動作を検証してみたいと思います。Minikube などのローカルな環境でも試すことができそうでしたが、折角なので Azure Kubernetes Service(AKS) で検証してみます。動作検証時の dapr は v0.2 になります。 0. ドキュメント Installing Dapr on a Kubernetes cluster https://github.com/dapr/docs/blob/master/getting-started/environment-setup.md#installing-dapr-on-a-kubernetes-cluster Set up an Azure Kubernetes Service cluster https://github.com/dapr/docs/blob/master/getting-started/cluster/setup-aks.md 1. Azure Kubernetes Service(AKS) Cluster の作成 前提条件として、次を作業端末にセットアップします。 ・Azure CLI ・kubectl</description>
            </item>
        
            <item>
                <title>Microsoft Ignite 2019 で発表された新機能のまとめ(Network編)</title>
                <link>https://yonehub.y10e.com/2019/11/21/20191121_ignite2019_network/</link>
                <pubDate>Thu, 21 Nov 2019 06:48:00 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/21/20191121_ignite2019_network/</guid>
                <description>Microsoft Ignite 2019 の Network 系サービスの update まとめです。 4つのカテゴリに分けて各種サービスの update が紹介されていました。 ・Connect &amp;amp; Extend ・Protect ・Deliver ・Monitoring ネットワークサービスは、難しいですね。機能ごとのセッションを追いきれなかったので、補足とかある人は twitter とかでご教示いただきたいなぁ。 1. Connect &amp;amp; Extend Azure Peering Service (Preview) ISP を介してパブリックネットワーク経由で Microsoftクラウド(Office 365</description>
            </item>
        
            <item>
                <title> Windows 7、Windows Server 2008/R2 の延長セキュリティ更新プログラムを入手する方法</title>
                <link>https://yonehub.y10e.com/2019/11/20/20191120_windows_eos/</link>
                <pubDate>Wed, 20 Nov 2019 20:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/20/20191120_windows_eos/</guid>
                <description>Windows Server 2008 および 2008 R2 の延長サポートは、2020 年 1 月 14 日に終了しますが、オンプレミス環境で追加の料金を支払うことで 3 年間の延長セキュリティ更新プログラム(ESU)を利用できるオプションが昨年公開されました。また、Windows Server 2008 および 2008 R2のワークロードを Azure に移行すると、この ESU を無償で利用できるということで話題になりました。 このオプションについての概要や全体的な Azure への移行などについては、SQL Server 2008 お</description>
            </item>
        
            <item>
                <title>Microsoftのマイクロサービス構築フレームワーク Dapr を動かす</title>
                <link>https://yonehub.y10e.com/2019/11/16/20191116_dapr/</link>
                <pubDate>Sat, 16 Nov 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/16/20191116_dapr/</guid>
                <description>2019年10月にマイクロサービスアプリケーションの開発を容易にするためのフレームワークとして&amp;quot;Dapr&amp;quot;がマイクロソフトから公開されました。現在α版となっています。 Daprは、プログラミング言語に依存せずマイクロサービス間の呼び出し機能やステート管理、サービス間のメッセージ機能、リソースのバインディング、 分散サービス間のトレーシングなどの機能を提供するソフトウェアです。 マイク</description>
            </item>
        
            <item>
                <title>Raspberry Pi用にRaspbianのインストール(Mac)</title>
                <link>https://yonehub.y10e.com/2019/11/11/20191111_raspberrypi_setup/</link>
                <pubDate>Mon, 11 Nov 2019 21:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/11/20191111_raspberrypi_setup/</guid>
                <description>Raspberry Pi 用の Micro SD カードに Raspbian をインストール手順を時間があくととすぐ忘れてしまうので手順をメモしておく。 1. SDカードの選別 基本的に SD カードのサイズは、マイクロSDカードが必要（ただし Raspberry Pi Model A およびRaspberry Pi Model B は、フル SD カード） NOOBS、Raspbianのイメージインストールは最小推奨で 8GB 以上なので、それ以上のサイズが必要。 カードのスループットに推奨値はないみたいだが、自分は大体 Class 10 以上を使っ</description>
            </item>
        
            <item>
                <title>Microsoft Ignite 2019 で発表された新機能のまとめ(Storage編)</title>
                <link>https://yonehub.y10e.com/2019/11/11/20191110_ignite2019_storage/</link>
                <pubDate>Mon, 11 Nov 2019 00:48:00 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/11/20191110_ignite2019_storage/</guid>
                <description>Microsoft Ignite 2019 の Storage周りの update まとめです。 公開情報がまだ十分にない preview な機能の紹介が多かった印象でした。 1. Azure Disk ディスク関連の update は、 Azure VM とかぶっているのが多くあります。 SAP HANA Certification on Ultra Disk and M/E series VMs 8月に GA された Ultra Disk と M or E シリーズ VM の構成が、SAP HANA の認定を受けた。 参照:Azure Ultra Disk Storage の一般公開に関するお知らせ Shared Disk Support for Ultra and Premium SSD 複数の仮想マシンからディスクを共有する Azure Shared Disks のプレビューが開始されたそうです。 プレ</description>
            </item>
        
            <item>
                <title>Microsoft Ignite 2019 で発表された新機能のまとめ(AKS/Container編)</title>
                <link>https://yonehub.y10e.com/2019/11/08/20191108_ignite2019_aks/</link>
                <pubDate>Fri, 08 Nov 2019 12:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/08/20191108_ignite2019_aks/</guid>
                <description>Microsoft Ignite 2019 で AKS / Container 関連も多く update がありました。 画期的というよりは、実用的な機能が充実してきたと思える機能が多くありました。 1. Threat protection for Azure Kubernetes Service Azure Security Centerでの、AKS クラスタを対象とした保護機能が拡大しているようです。 次の項目が挙げられていました。 • Discovery &amp;amp; Visibility - サブスクリプション内のAKSインスタンスの継続的ディスカバリ • Recommendations - セキュリティベストプラクティスを実行を助ける項目提示 • Threat Detection - ホストとクラスターベース</description>
            </item>
        
            <item>
                <title>Microsoft Ignite 2019 で発表された新機能のまとめ(VM/VMSS編)</title>
                <link>https://yonehub.y10e.com/2019/11/07/20191107_ignite2019_iaas/</link>
                <pubDate>Thu, 07 Nov 2019 17:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/07/20191107_ignite2019_iaas/</guid>
                <description>今週は Microsoft Ignite 2019 で盛り上がった一週間でした。 自分の周りでは、Keynote で取り上げられていた、Azure Arc や Azure Synapse が特に話題になっていた気がします。 それ以外にも、新機能の発表、プレビュー機能の GA ニュースが山盛りでした。 発表された項目は、Book of News Microsoft Ignite 2019に記載がありますが、index だけで7ページもあります。 しばらくキャッチアップに注力せねば&amp;hellip; そんな中、Azure の IaaS 系のサービスに</description>
            </item>
        
            <item>
                <title>VM ScalesetのOrchestration Modeについて</title>
                <link>https://yonehub.y10e.com/2019/11/06/20191106_vmss_orchestrationmode/</link>
                <pubDate>Wed, 06 Nov 2019 22:47:23 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/11/06/20191106_vmss_orchestrationmode/</guid>
                <description>Microsoft Ignite 2019で触れられていた、VM Scaleset のOrchestration modeというプレビュー機能について調べてみました。 要約すると、VM Scalesetに通常の仮想マシンを追加できる機能でした。 ・2種類のOrchestration(ScaleSetVM or VM)を選択できる（VMSS作成時のみ） ・ScaleSetVMモードは以前のVMSS。VMSSの雛形にそったVMインスタンスをスケールさせるので、基本</description>
            </item>
        
            <item>
                <title>Github pages &#43; Hugoでブログ構築</title>
                <link>https://yonehub.y10e.com/2019/10/22/20191022_hugo_githubio/</link>
                <pubDate>Tue, 22 Oct 2019 22:03:28 +0900</pubDate>
                
                <guid>https://yonehub.y10e.com/2019/10/22/20191022_hugo_githubio/</guid>
                <description>クラウドのVM上でWordpressで公開していたブログをgithub pages + Hugoに移行してみた。 Hugoは静的サイトジェネレータの一つで、Go言語で作られています。MarkDown等の記述性の高い形式で書かれたファイルを指定したデザインテーマでHTML + CSSのWEBコンテンツに変換してくれます。 Why GitHub Pages? 第一の理由はコストです。クラウドとはいえ Web Server の稼働代金も1000円/月程度かかるので無料で使え</description>
            </item>
        
    </channel>
</rss>
